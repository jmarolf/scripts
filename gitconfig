[user]
	name = Jonathon Marolf
	email = jmarolf@microsoft.com
[alias]
	unstage = reset HEAD --
	br = branch
	co = checkout
	undo = reset --soft HEAD^
	stash-all = stash save --include-untracked
	amend = !git log -n 1 --pretty=tformat:%s%n%n%b | git commit -F - --amend
	# List local commits that were not pushed to remote repository
	review-local = "!git log @{push}.."
	# Edit last commit message
	reword = commit --amend
	# Undo last commit but keep changed files in stage
	uncommit = reset --soft HEAD~1
	# Remove file(s) from Git but not from disk
	untrack = rm --cache --
	glog = log --all --pretty='format:%d %Cgreen%h%Creset %an - %s' --graph
	find = log --all -p --reverse --source -S
[checkout]
	# The number of parallel workers to use when updating the working tree.
	# The default is one, i.e. sequential execution.
	# If set to a value less than one, Git will use as many workers
	# as the number of logical cores available. 
	workers = -1
	# When running parallel checkout with a small number of files,
	# the cost of subprocess spawning and inter-process communication
	# might outweigh the parallelization gains. This setting allows
	# to define the minimum number of files for which parallel checkout
	# should be attempted.
	thresholdForParallelism = 100
[color]
	# Enable colors in color-supporting terminals
	ui = auto
[core]
	# VSCode
	editor = code --wait
	# Don't consider trailing space change as a cause for merge conflicts
	whitespace = -trailing-space
	# An integer -1..9, indicating a default compression level. -1 is the zlib default.
	# 0 means no compression, and 1..9 are various speed/size tradeoffs, 9 being slowest.
	compression = 9
	# Enable long path (> 260) support for builtin commands in Git for Windows.
	longpaths = true
	# Enable parallel index preload for operations like git diff
	# This can speed up operations like git diff and git status 
	preloadIndex = true
	# Enable additional caching of file system data for some operations.
	# Git for Windows uses this to bulk-read and cache lstat data of entire directories
	fscache = true
[diff]
	# Use better, descriptive initials (c, i, w) instead of a/b.
	mnemonicPrefix = true
	# Show renames/moves as such
	renames = copy
	# When using --word-diff, assume --word-diff-regex=.
	wordRegex = .
	# Display submodule-related information (commit listings)
	submodule = log
	# Use VSCode as default diff tool when running `git diff-tool`
	tool = vsdiffmerge
[fetch]
	prune = true
	# Auto-fetch submodule changes (sadly, won't auto-update)
	recurseSubmodules = on-demand
	# Specifies the maximal number of fetch operations to be run in parallel at a time
	# A value of 0 will give some reasonable default.
	parallel = 0
[merge]
	# Display common-ancestor blocks in conflict hunks
	conflictstyle = zdiff3
	tool = vsdiffmerge
	# Show renames/moves as such
	directoryRenames = true
	renames = true
[mergetool]
	# Clean up backup files created by merge tools on tool exit
	keepBackup = false
	# Clean up temp files created by merge tools on tool exit
	keepTemporaries = false
	# Put the temp files in a dedicated dir anyway
	writeToTemp = true
	# Auto-accept file prompts when launching merge tools
	prompt = true
[rerere]
	# Activate recording of resolved conflicts, so that
	# identical conflict hunks can be resolved automatically,
	# should they be encountered again.
	enabled = true
	# When set to true, git-rerere updates the index with the
	# resulting contents after it cleanly resolves conflicts
	# using previously recorded resolution.
	autoUpdate = true
[push]
	# pushes the current branch with the same name on the remote.
	default = simple
	# When pushing, also push tags whose commit-ishs are now reachable upstream
	followTags = true
[feature]
	# Enable config options that optimize for repos with many files in the working directory. 
	manyFiles = true
[format]
	pretty = oneline
[log]
	abbrevCommit = true
[url "https://github.com/"]
	insteadOf = gh:
[status]
	showUntrackedFiles = all
	renames = copy
[difftool]
	prompt = true
[difftool "vscode"]
	cmd = code --wait --diff $LOCAL $REMOTE
[gc]
	autoDetach = true
	auto = 4800
	worktreePruneExpire = 3.months.ago
	pruneExpire = 2.weeks.ago
	rerereResolved = 1.month.ago
	rerereUnresolved = 1.month.ago
[index]
	threads = true
[init]
	defaultBranch = main
[pack]
	threads = 0
[rebase]
	autoStash = true
[receive]
	autogc = true
